{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.0",
    "title" : "Plixus API 1.0",
    "description" : "REST API for cure on the Central Unit. Handles Diagnostics and Events."
  },
  "host" : "localhost:9012",
  "schemes" : [ "http" ],
  "paths" : {
    "/api/events/diagnostics/deviceadded" : {
      "get" : {
        "tags" : [ "Events" ],
        "responses" : {
          "200" : {
            "description" : "Metadata for DeviceAdded event",
            "schema" : {
              "$ref" : "#/definitions/DeviceAdded"
            }
          }
        }
      }
    },
    "/api/events/diagnostics/devicedeleted" : {
      "get" : {
        "tags" : [ "Events" ],
        "responses" : {
          "200" : {
            "description" : "Metadata for DeviceDeleted event",
            "schema" : {
              "$ref" : "#/definitions/DeviceDeleted"
            }
          }
        }
      }
    },
    "/api/events/diagnostics/healthStateChanged" : {
      "get" : {
        "tags" : [ "Events" ],
        "responses" : {
          "200" : {
            "description" : "Metadata for HealthStateChanged event",
            "schema" : {
              "$ref" : "#/definitions/HealthStateChanged"
            }
          }
        }
      }
    },
    "/api/events/diagnostics/neighboursChanged" : {
      "get" : {
        "tags" : [ "Events" ],
        "responses" : {
          "200" : {
            "description" : "Metadata for NeighboursChanged event",
            "schema" : {
              "$ref" : "#/definitions/NeighboursChanged"
            }
          }
        }
      }
    },
    "/api/v1/confidealicenses" : {
      "get" : {
        "tags" : [ "ConfideaLicensing" ],
        "summary" : "Get a mapping of the serial numbers and applied licenses of all ConfideaNG devices",
        "operationId" : "ApiV1ConfideaLicensesGet",
        "consumes" : [ ],
        "produces" : [ "text/plain" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "uniqueItems" : false,
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ConfideaLicenseWithSerial"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ConfideaLicensing" ],
        "summary" : "Apply a certain license to all ConfideaNG devices",
        "operationId" : "ApiV1ConfideaLicensesPut",
        "consumes" : [ ],
        "produces" : [ ],
        "parameters" : [ {
          "name" : "license",
          "in" : "body",
          "description" : "License to apply",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ConfideaLicense"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/api/v1/confidealicenses/left" : {
      "get" : {
        "tags" : [ "ConfideaLicensing" ],
        "summary" : "Get an overview of the available Confidea licenses and how many are still available",
        "operationId" : "ApiV1ConfideaLicensesLeftGet",
        "consumes" : [ ],
        "produces" : [ "text/plain" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ConfideaLicensesLeft"
            }
          }
        }
      }
    },
    "/api/v1/confidealicenses/{serial}" : {
      "get" : {
        "tags" : [ "ConfideaLicensing" ],
        "summary" : "Get the Confidea license that has been applied to a specific Confidea device",
        "operationId" : "ApiV1ConfideaLicensesSerialGet",
        "consumes" : [ ],
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serial",
          "in" : "path",
          "description" : "The serial of the device",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ConfideaLicense"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ConfideaLicensing" ],
        "summary" : "Apply a Confidea license to a specific Confidea device",
        "operationId" : "ApiV1ConfideaLicensesSerialPut",
        "consumes" : [ ],
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serial",
          "in" : "path",
          "description" : "The serial of the device",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "license",
          "in" : "body",
          "description" : "License to apply",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ConfideaLicense"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/api/v1/devices/types" : {
      "get" : {
        "tags" : [ "Devices" ],
        "summary" : "Get a translation of device firmware type to commercial names",
        "operationId" : "ApiV1DevicesTypesGet",
        "consumes" : [ ],
        "produces" : [ "text/plain" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "uniqueItems" : false,
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DeviceNameInfo"
              }
            }
          }
        }
      }
    },
    "/api/v1/diagnostics/devices" : {
      "get" : {
        "tags" : [ "Diagnostics" ],
        "summary" : "Get a list of devices detected in the system",
        "operationId" : "ApiV1DiagnosticsDevicesGet",
        "consumes" : [ ],
        "produces" : [ "text/plain" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "uniqueItems" : false,
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DeviceInfo"
              }
            }
          }
        }
      }
    },
    "/api/v1/diagnostics/devices/details" : {
      "get" : {
        "tags" : [ "Diagnostics" ],
        "summary" : "Get a list of the details of each device detected in the system",
        "operationId" : "ApiV1DiagnosticsDevicesDetailsGet",
        "consumes" : [ ],
        "produces" : [ "text/plain" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "uniqueItems" : false,
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DeviceDetails"
              }
            }
          }
        }
      }
    },
    "/api/v1/diagnostics/devices/{serial}" : {
      "get" : {
        "tags" : [ "Diagnostics" ],
        "summary" : "Get details about a device in the system",
        "operationId" : "ApiV1DiagnosticsDevicesBySerialGet",
        "consumes" : [ ],
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serial",
          "in" : "path",
          "description" : "",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DeviceDetails"
            }
          }
        }
      }
    },
    "/api/v1/diagnostics/devices/{serial}/errors" : {
      "delete" : {
        "tags" : [ "Diagnostics" ],
        "summary" : "Clear error counters of a device in the system",
        "operationId" : "ApiV1DiagnosticsDevicesBySerialErrorsDelete",
        "consumes" : [ ],
        "produces" : [ ],
        "parameters" : [ {
          "name" : "serial",
          "in" : "path",
          "description" : "Unique serial number of the device",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/api/v1/diagnostics/devices/errors" : {
      "delete" : {
        "tags" : [ "Diagnostics" ],
        "summary" : "Clear error counters of all devices in the system",
        "operationId" : "ApiV1DiagnosticsDevicesErrorsDelete",
        "consumes" : [ ],
        "produces" : [ ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/api/v1/diagnostics/devices/{serial}/highlightstate" : {
      "get" : {
        "tags" : [ "Diagnostics" ],
        "summary" : "Get the highlight state of a device",
        "operationId" : "ApiV1DiagnosticsDevicesBySerialHighlightstateGet",
        "consumes" : [ ],
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "serial",
          "in" : "path",
          "description" : "Unique serial number of the device",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/HighlightState"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Diagnostics" ],
        "summary" : "Change the highlight state of a device",
        "operationId" : "ApiV1DiagnosticsDevicesBySerialHighlightstatePut",
        "consumes" : [ ],
        "produces" : [ ],
        "parameters" : [ {
          "name" : "serial",
          "in" : "path",
          "description" : "Unique serial number of the device",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "body",
          "description" : "New state to apply",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HighlightState"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "Diagnostics" ],
        "summary" : "Stop highlighting a device",
        "operationId" : "ApiV1DiagnosticsDevicesBySerialHighlightstateDelete",
        "consumes" : [ ],
        "produces" : [ ],
        "parameters" : [ {
          "name" : "serial",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/api/v1/diagnostics/devices/highlightstate" : {
      "put" : {
        "tags" : [ "Diagnostics" ],
        "summary" : "Change the highlight state of all devices in the system",
        "operationId" : "ApiV1DiagnosticsDevicesHighlightstatePut",
        "consumes" : [ ],
        "produces" : [ ],
        "parameters" : [ {
          "name" : "state",
          "in" : "body",
          "description" : "New state to apply",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HighlightState"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "Diagnostics" ],
        "summary" : "Stop highlighting all devices in the system",
        "operationId" : "ApiV1DiagnosticsDevicesHighlightstateDelete",
        "consumes" : [ ],
        "produces" : [ ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/api/v1/diagnostics/devices/{serial}/test" : {
      "post" : {
        "tags" : [ "Diagnostics" ],
        "summary" : "Test a device in the system",
        "operationId" : "ApiV1DiagnosticsDevicesBySerialTestPost",
        "consumes" : [ ],
        "produces" : [ ],
        "parameters" : [ {
          "name" : "serial",
          "in" : "path",
          "description" : "Unique serial number of the device",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "req",
          "in" : "body",
          "description" : "Request with information about the test to execute",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DeviceTestRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "Diagnostics" ],
        "summary" : "Stop testing a device in the system",
        "operationId" : "ApiV1DiagnosticsDevicesBySerialTestDelete",
        "consumes" : [ ],
        "produces" : [ ],
        "parameters" : [ {
          "name" : "serial",
          "in" : "path",
          "description" : "Unique serial number of the device",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/api/v1/diagnostics/test/enabled" : {
      "get" : {
        "tags" : [ "Diagnostics" ],
        "summary" : "Get test mode status",
        "operationId" : "ApiV1DiagnosticsTestGet",
        "consumes" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TestEnabled"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Diagnostics" ],
        "summary" : "Enable test mode in the CU",
        "operationId" : "ApiV1DiagnosticsTestPost",
        "consumes" : [ ],
        "produces" : [ ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      },
      "delete" : {
        "tags" : [ "Diagnostics" ],
        "summary" : "Disable test mode in the CU",
        "operationId" : "ApiV1DiagnosticsTestDelete",
        "consumes" : [ ],
        "produces" : [ ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/api/notification/connect" : {
      "post" : {
        "tags" : [ "Notification" ],
        "summary" : "Get a client id for long polling requests",
        "operationId" : "ApiNotificationConnectPost",
        "consumes" : [ ],
        "produces" : [ "text/plain" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/NotificationId"
            }
          }
        }
      }
    },
    "/api/notification/{client}/nextevent" : {
      "get" : {
        "tags" : [ "Notification" ],
        "summary" : "Make a long polling request for the next event",
        "operationId" : "ApiNotificationByClientNexteventGet",
        "consumes" : [ ],
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "client",
          "in" : "path",
          "description" : "Unique id of client that makes the request (retrieved by call to connect)",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Notification"
            }
          },
          "408" : {
            "description" : "Request Timeout"
          }
        }
      }
    },
    "/api/notification/{client}/modules" : {
      "get" : {
        "tags" : [ "Notification" ],
        "summary" : "Get list of notification modules for client",
        "operationId" : "ApiNotificationByClientModulesGet",
        "consumes" : [ ],
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "client",
          "in" : "path",
          "description" : "Unique id of client",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "uniqueItems" : false,
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/NotificationModule"
              }
            }
          }
        }
      }
    },
    "/api/notification/{client}/modules/{module}/unsubscribe" : {
      "post" : {
        "tags" : [ "Notification" ],
        "summary" : "Unsubscribe client from notification module",
        "operationId" : "ApiNotificationByClientModulesByModuleUnsubscribePost",
        "consumes" : [ ],
        "produces" : [ ],
        "parameters" : [ {
          "name" : "client",
          "in" : "path",
          "description" : "Unique id of client",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "module",
          "in" : "path",
          "description" : "Name of module to unsubscribe from",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/api/notification/{client}/modules/{module}/subscribe" : {
      "post" : {
        "tags" : [ "Notification" ],
        "summary" : "Subscribe client to notification module",
        "operationId" : "ApiNotificationByClientModulesByModuleSubscribePost",
        "consumes" : [ ],
        "produces" : [ ],
        "parameters" : [ {
          "name" : "client",
          "in" : "path",
          "description" : "Unique id of client",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "module",
          "in" : "path",
          "description" : "Name of module to subscribe to",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    }
  },
  "definitions" : {
    "ConfideaLicenseWithSerial" : {
      "description" : "Mapping of a confidea license with the serial of the device it has been applied to",
      "type" : "object",
      "properties" : {
        "serial" : {
          "description" : "The serial of the device formatted as hex string",
          "type" : "string"
        },
        "license" : {
          "$ref" : "#/definitions/ConfideaLicense"
        }
      }
    },
    "ConfideaLicense" : {
      "description" : "Licenses that should be applied to a ConfideaNG device",
      "type" : "object",
      "properties" : {
        "dualDelegate" : {
          "description" : "Type of dual delegate license requested",
          "enum" : [ "1D1I", "2D2I", "1D2I" ],
          "type" : "string"
        },
        "interpretation" : {
          "description" : "Is an interpretation license requested (uses 2 licenses if dualDelegate != 1D1I)",
          "type" : "boolean"
        },
        "badge" : {
          "description" : "Is a badge license requested (uses 2 licenses if dualDelegate != 1D1I)",
          "type" : "boolean"
        },
        "voting" : {
          "description" : "Is a voting license requested (uses 2 licenses if dualDelegate != 1D1I)",
          "type" : "boolean"
        },
        "bluetooth" : {
          "description" : "Is a bluetooth audio license requested (mutually exclusive with dualdelegate other than 1D1I)",
          "type" : "boolean"
        }
      }
    },
    "ConfideaLicensesLeft" : {
      "description" : "Overview of maximum available confidea licenses and how many are still free",
      "type" : "object",
      "properties" : {
        "badgeLicensesMax" : {
          "description" : "The maximum amount of badge licenses available",
          "format" : "int32",
          "type" : "integer"
        },
        "badgeLicenseLeft" : {
          "description" : "The amount of badge licenses currently available",
          "format" : "int32",
          "type" : "integer"
        },
        "bluetoothLicensesMax" : {
          "description" : "The maximum amount of bluetooth audio licenses available",
          "format" : "int32",
          "type" : "integer"
        },
        "bluetoothLicenseLeft" : {
          "description" : "The amount of bluetooth audio licenses currently available",
          "format" : "int32",
          "type" : "integer"
        },
        "dualDelegateLicensesMax" : {
          "description" : "The maximum amount of dual elegate licenses available",
          "format" : "int32",
          "type" : "integer"
        },
        "dualDelegateLicenseLeft" : {
          "description" : "The amount of dual elegate licenses currently available",
          "format" : "int32",
          "type" : "integer"
        },
        "interpretationLicensesMax" : {
          "description" : "The maximum amount of interpretation licenses available",
          "format" : "int32",
          "type" : "integer"
        },
        "interpretationLicenseLeft" : {
          "description" : "The amount of interpretation licenses currently available",
          "format" : "int32",
          "type" : "integer"
        },
        "votingLicensesMax" : {
          "description" : "The maximum amount of voting licenses available",
          "format" : "int32",
          "type" : "integer"
        },
        "votingLicenseLeft" : {
          "description" : "The amount of voting licenses currently available",
          "format" : "int32",
          "type" : "integer"
        }
      }
    },
    "DeviceNameInfo" : {
      "description" : "Translation from hardware type to commercial name of device",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Id of the device as integer",
          "format" : "int32",
          "type" : "integer"
        },
        "type" : {
          "description" : "Id of the device formatted as hex string",
          "type" : "string"
        },
        "name" : {
          "description" : "Commercial name of the device",
          "type" : "string"
        },
        "family" : {
          "description" : "Commercial name of the device's family",
          "type" : "string"
        }
      }
    },
    "DeviceInfo" : {
      "description" : "Summary information about a device",
      "type" : "object",
      "properties" : {
        "serial" : {
          "description" : "Unique serial number of the device",
          "type" : "string"
        },
        "firmwareType" : {
          "description" : "Type of device",
          "type" : "string"
        },
        "bootStatus" : {
          "description" : "Boot status of the device",
          "enum" : [ "Offline", "Golden", "Application" ],
          "type" : "string"
        },
        "healthStatus" : {
          "description" : "Health status of the device",
          "enum" : [ "Offline", "Error", "Warning", "Online" ],
          "type" : "string"
        },
        "testStatus" : {
          "description" : "True if the device is being tested",
          "type" : "boolean"
        },
        "neighbours" : {
          "description" : "Serial number of neighbour devices",
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "highlightState" : {
          "$ref" : "#/definitions/HighlightState"
        }
      }
    },
    "HighlightState" : {
      "description" : "Highlight state of a device",
      "type" : "object",
      "properties" : {
        "ledState" : {
          "description" : "State of the led that should be highlighted",
          "enum" : [ "Off", "On", "Blinking" ],
          "type" : "string"
        },
        "ledColor" : {
          "description" : "Color of the led that should be highlighted",
          "enum" : [ "Green", "Red" ],
          "type" : "string"
        }
      }
    },
    "DeviceDetails" : {
      "description" : "Detailed information about a device",
      "type" : "object",
      "properties" : {
        "serial" : {
          "description" : "Unique serial number of the device",
          "type" : "string"
        },
        "bootStatus" : {
          "description" : "Booth status of the devie",
          "enum" : [ "Offline", "Golden", "Application" ],
          "type" : "string"
        },
        "healthStatus" : {
          "description" : "Health status of the device",
          "enum" : [ "Offline", "Error", "Warning", "Online" ],
          "type" : "string"
        },
        "testStatus" : {
          "description" : "True if the device is being tested",
          "type" : "boolean"
        },
        "bootErrorStatus" : {
          "description" : "Booth error status of the devie",
          "enum" : [ "NoError", "WatchDog", "CRCError", "ExternalReconfiguration", "ExternalStatusAssertion" ],
          "type" : "string"
        },
        "firmwareType" : {
          "description" : "Firmware type of device",
          "type" : "string"
        },
        "firmwareVersionGolden" : {
          "description" : "Firmware version of golden",
          "type" : "string"
        },
        "firmwareVersionApplication" : {
          "description" : "Firmware version of application",
          "type" : "string"
        },
        "softwareVersionApplication" : {
          "description" : "Software version of application",
          "type" : "string"
        },
        "neighbours" : {
          "description" : "Serial number of neighbour devices",
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "ports" : {
          "description" : "Information about device network ports",
          "uniqueItems" : false,
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/NetworkPort"
          }
        },
        "childDevices" : {
          "description" : "List of child devices that are part of this device",
          "uniqueItems" : false,
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DeviceDetails"
          }
        },
        "hardwareUnits" : {
          "description" : "List of hardware units",
          "uniqueItems" : false,
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HardwareUnit"
          }
        },
        "highlightState" : {
          "$ref" : "#/definitions/HighlightState"
        }
      }
    },
    "NetworkPort" : {
      "description" : "Details about a device network port",
      "type" : "object",
      "properties" : {
        "number" : {
          "format" : "int32",
          "description" : "Number of the network port",
          "type" : "integer"
        },
        "voltage" : {
          "format" : "double",
          "description" : "Voltage of the port",
          "type" : "number"
        },
        "current" : {
          "format" : "double",
          "description" : "Current of the port",
          "type" : "number"
        },
        "linkErrorCount" : {
          "format" : "int32",
          "description" : "Number of link errors counted on the port",
          "type" : "integer"
        },
        "packetErrorCount" : {
          "format" : "int32",
          "description" : "Number of packet errors counted on the port",
          "type" : "integer"
        },
        "isConnected" : {
          "description" : "True when this port is currently connected to another device",
          "type" : "boolean"
        },
        "isNetworkExtender" : {
          "description" : "True when this port is used for extending the network",
          "type" : "boolean"
        }
      }
    },
    "HardwareUnit" : {
      "description" : "Details about a hardware unit",
      "type" : "object",
      "properties" : {
        "extensions" : {
          "description" : "List of unit extensions defining this hardware unit",
          "uniqueItems" : false,
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UnitExtension"
          }
        }
      }
    },
    "UnitExtension" : {
      "description" : "Details about a unit extension defining a hardware unit",
      "type" : "object",
      "properties" : {
        "type" : {
          "description" : "Type of the unit extension",
          "type" : "string"
        },
        "properties" : {
          "description" : "List of properties of the unit extension",
          "uniqueItems" : false,
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UnitExtensionProperty"
          }
        }
      }
    },
    "UnitExtensionProperty" : {
      "description" : "Property of a single unit extension",
      "type" : "object",
      "properties" : {
        "name" : {
          "description" : "Name of the property",
          "type" : "string"
        },
        "value" : {
          "description" : "Value of the property",
          "type" : "string"
        }
      }
    },
    "DeviceTestRequest" : {
      "description" : "Request for testing a device",
      "type" : "object",
      "properties" : {
        "testMicrophone" : {
          "description" : "True when microphone should be tested",
          "type" : "boolean"
        },
        "testSpeakers" : {
          "description" : "True when speakers should be tested",
          "type" : "boolean"
        },
        "testLED" : {
          "description" : "True when LED's should be tested",
          "type" : "boolean"
        }
      }
    },
    "TestEnabled" : {
      "properties" : {
        "testModeEnabled" : {
          "description" : "True if test mode is enabled",
          "type" : "boolean"
        }
      }
    },
    "NotificationId" : {
      "properties" : {
        "connectionId" : {
          "description" : "The client id for notifications",
          "type" : "string"
        }
      }
    },
    "Notification" : {
      "description" : "Notification with event information",
      "type" : "object",
      "properties" : {
        "name" : {
          "description" : "Name of the event",
          "type" : "string"
        },
        "moduleName" : {
          "description" : "Name of the module where the event occurred",
          "type" : "string"
        },
        "timestamp" : {
          "format" : "date-time",
          "description" : "Date and time when the event occurred",
          "type" : "string"
        },
        "data" : {
          "description" : "Information about the event",
          "type" : "object"
        }
      }
    },
    "NotificationModule" : {
      "description" : "Module that exposes notifications",
      "type" : "object",
      "properties" : {
        "name" : {
          "description" : "Name of the module",
          "type" : "string"
        },
        "isSubscribed" : {
          "description" : "True when the client is subscribed to this module",
          "type" : "boolean"
        }
      }
    },
    "DeviceAdded" : {
      "description" : "Event when device is detected in the room",
      "type" : "object",
      "properties" : {
        "serial" : {
          "description" : "Device serial of newly added device",
          "type" : "string"
        }
      }
    },
    "DeviceDeleted" : {
      "description" : "Event when device was deleted from room",
      "type" : "object",
      "properties" : {
        "serial" : {
          "description" : "Device serial",
          "type" : "string"
        }
      }
    },
    "HealthStateChanged" : {
      "description" : "Event when the HealthState of a device changed",
      "type" : "object",
      "properties" : {
        "serial" : {
          "description" : "Unique serial number of the device",
          "type" : "string"
        },
        "healthStatus" : {
          "description" : "Health status of the device",
          "enum" : [ "Offline", "Error", "Warning", "Online" ],
          "type" : "string"
        }
      }
    },
    "NeighboursChanged" : {
      "description" : "Event when the neighbours of a device changed",
      "properties" : {
        "serial" : {
          "description" : "Unique serial number of the device",
          "type" : "string"
        },
        "neighbours" : {
          "description" : "Serial number of neighbour device",
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    }
  }
}